@use 'reset';

@use 'font';
@use 'icons';
@use 'cursors';
@use 'utils';
@use 'typography';
@use 'colors' as *;

@mixin expand-map($map) {
  @each $name, $value in $map {
    --#{$name}: #{$value};
  }
}

:root {
  @include expand-map($theme-dark);
}

// @media (prefers-color-scheme: light) {
//   :root {
//     @include expand-map($theme-light);
//   }
// }

:root {
  --fast: 0.25s;
  --slow: 1s;

  --radius-small: 4px;
  --radius-medium: 6px;
  --radius-large: 8px;

  --shadow-small: 0 0 5px 1px rgb(var(--shadow));
  --shadow-medium: 0 0 10px 10px rgb(var(--shadow));
  --shadow-large: 0 0 20px 10px rgb(var(--shadow));
  --shadow-control-inset: 0 0 0.5em rgb(0 0 0 / 0.25) inset;

  --z-app: 20;
  --z-dlg: 10;
}

body {
  background-image: url(@/assets/bg.png);
}

body,
dialog {
  color: rgb(var(--text));
}

input {
  display: flex;
  align-items: center;
  padding-inline: 0.5em;
  width: 8em;
  border-radius: var(--radius-small);
  background-color: rgb(0 0 0 / 0.1);
}

p {
  margin: 0.75em 0;
  line-height: 1.25em;
}

.app,
.view {
  position: absolute;
  inset: 0;
}

.app {
  overflow: hidden;
  background: rgb(var(--back));
  box-shadow: 0 0 25vw rgb(0 0 0) inset;
}

.glass {
  background-color: rgb(var(--glass));
  backdrop-filter: blur(10px);
}

.tools {
  position: absolute;
  display: flex;
  gap: 0.25em;
  padding: 0.5em;
  line-height: 1;
}

.surface { background-color: rgb(var(--surface)); }
.paper { background-color: rgb(var(--paper)); }

.separator {
  background-color: rgb(var(--line));
  flex-grow: 1;
  flex-shrink: 0;
  &.horizontal {
    height: 1px;
  }
  &.vertical {
    width: 1px;
    // TODO: consider unfication
    align-self: stretch;
  }
}

svg text { user-select: none; }

.absolute { position: absolute; }
.relative { position: relative; }

.clip { overflow: hidden; }
.scrollable { overflow: auto; }
.hidden { visibility: hidden; }

.spacer { flex-grow: 1; }
.spacer.collapsed { flex-grow: 0; }

.flex { display: flex; }
.col { flex-direction: column; }
.row { flex-direction: row; }
.ai-start { align-items: start; }
.ai-center { align-items: center; }
.as-stretch { align-self: stretch; }
.jc-center { justify-content: center; }

.round { border-radius: 50vh; }
.anchor { position: absolute; }
.left { left: 0; }
.right { right: 0; }
.top { top: 0; }
.bottom { bottom: 0; }

.mouse { pointer-events: all; }
.no-mouse { pointer-events: none; }
.no-resize { resize: none; }

// margins, paddings: m-2, mx-2 etc.
@each $suffix in (1 2 3 4) {
  $value: $suffix * 0.25em;
  @each $property, $prefix in ((margin m) (padding p)) {
    .#{$prefix}-#{$suffix} {
      #{$property}: #{$value};
    }
    .#{$prefix}x-#{$suffix} {
      #{$property}-inline: $value;
    }
    .#{$prefix}y-#{$suffix} {
      #{$property}-block: $value;
    }
    .#{$prefix}l-#{$suffix} {
      #{$property}-inline-start: $value;
    }
    .#{$prefix}t-#{$suffix} {
      #{$property}-block-start: $value;
    }
    .#{$prefix}r-#{$suffix} {
      #{$property}-inline-end: $value;
    }
    .#{$prefix}b-#{$suffix} {
      #{$property}-block-end: $value;
    }
  }
  .gap-#{$suffix} {
    gap: $value;
  }
}
